# OFM Onboarding System Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DATABASE_URL=postgresql://username:password@localhost:5432/ofm_database
# Alternative: sqlite:///./ofm_dev.db

# =============================================================================
# STRIPE CONNECT CONFIGURATION
# =============================================================================
# Stripe API keys - get from https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_your_test_secret_key_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_test_publishable_key_here

# Stripe webhook secret - get from webhook endpoint configuration
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# =============================================================================
# APPLICATION URLS
# =============================================================================
# Frontend URL for generating email links and redirects
FRONTEND_URL=https://app.ofm.com
# Alternative for development: http://localhost:3000

# URLs for Stripe Connect flow
FRONTEND_RETURN_URL=https://app.ofm.com/onboarding/stripe-return
FRONTEND_REFRESH_URL=https://app.ofm.com/onboarding/stripe-refresh

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# Secret key for JWT token signing (use a strong, unique secret)
JWT_SECRET=your-super-secure-jwt-secret-key-here-256-bits

# JWT token expiration times
JWT_ACCESS_TOKEN_EXPIRES=3600  # 1 hour in seconds
JWT_REFRESH_TOKEN_EXPIRES=604800  # 1 week in seconds

# =============================================================================
# EMAIL SERVICE CONFIGURATION
# =============================================================================
# Choose email provider: sendgrid, ses, smtp
EMAIL_PROVIDER=sendgrid

# From email address
FROM_EMAIL=noreply@ofm.com
SUPPORT_EMAIL=support@ofm.com

# SendGrid Configuration (if using EMAIL_PROVIDER=sendgrid)
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# AWS SES Configuration (if using EMAIL_PROVIDER=ses)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_DEFAULT_REGION=eu-west-1

# SMTP Configuration (if using EMAIL_PROVIDER=smtp)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_USE_TLS=true

# =============================================================================
# FLASK APPLICATION SETTINGS
# =============================================================================
# Flask environment: development, staging, production
FLASK_ENV=development

# Flask secret key for session management
FLASK_SECRET_KEY=your-flask-secret-key-for-sessions

# Flask debug mode (set to false in production)
FLASK_DEBUG=true

# Application port
PORT=5000

# =============================================================================
# RATE LIMITING AND SECURITY
# =============================================================================
# Rate limiting configuration
RATELIMIT_STORAGE_URL=redis://localhost:6379/0
RATELIMIT_ENABLED=true

# CORS configuration
CORS_ORIGINS=https://app.ofm.com,http://localhost:3000

# Session configuration
SESSION_TIMEOUT=3600  # 1 hour in seconds

# =============================================================================
# TASK QUEUE CONFIGURATION (Optional)
# =============================================================================
# Redis URL for task queue (Celery/RQ)
REDIS_URL=redis://localhost:6379/1

# Celery broker and backend (if using Celery)
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# =============================================================================
# ONLYFANS INTEGRATION (For Marketing Automation)
# =============================================================================
# OnlyFans API configuration (implement when available)
ONLYFANS_API_KEY=your_onlyfans_api_key_here
ONLYFANS_API_SECRET=your_onlyfans_api_secret_here

# Scraping service configuration (alternative to API)
SCRAPER_SERVICE_URL=https://your-scraper-service.com
SCRAPER_SERVICE_KEY=your_scraper_api_key

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (optional - logs to stdout if not set)
LOG_FILE=/var/log/ofm/onboarding.log

# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# MONITORING AND ANALYTICS
# =============================================================================
# Analytics tracking ID (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Application monitoring (optional)
DATADOG_API_KEY=your_datadog_api_key

# Health check configuration
HEALTH_CHECK_TOKEN=your_health_check_token

# =============================================================================
# DEVELOPMENT/TESTING OVERRIDES
# =============================================================================
# Set to true to enable mock services (for development)
USE_MOCK_EMAIL=false
USE_MOCK_STRIPE=false
USE_MOCK_ONLYFANS=true

# Test database URL (used in pytest)
TEST_DATABASE_URL=sqlite:///:memory:

# =============================================================================
# INTERNATIONALIZATION
# =============================================================================
# Default language and timezone
DEFAULT_LANGUAGE=en
DEFAULT_TIMEZONE=Europe/Paris

# Available languages for email templates
SUPPORTED_LANGUAGES=en,fr,es,de,it

# =============================================================================
# FILE STORAGE (Optional)
# =============================================================================
# For storing profile images, verification documents, etc.
STORAGE_PROVIDER=s3  # Options: local, s3, gcs

# AWS S3 Configuration (if using STORAGE_PROVIDER=s3)
S3_BUCKET_NAME=ofm-user-uploads
S3_REGION=eu-west-1

# Local storage configuration (if using STORAGE_PROVIDER=local)
LOCAL_STORAGE_PATH=/var/uploads/ofm

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable specific onboarding features
FEATURE_EMAIL_VERIFICATION=true
FEATURE_STRIPE_CONNECT=true
FEATURE_MARKETING_AUTOMATION=true
FEATURE_ONLYFANS_INTEGRATION=false  # Set to true when ready

# Beta features
BETA_ADVANCED_ANALYTICS=false
BETA_AI_CONTENT_SUGGESTIONS=false

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================
# Database connection pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# Redis connection settings  
REDIS_MAX_CONNECTIONS=50
REDIS_CONNECTION_TIMEOUT=5

# Request timeout settings
REQUEST_TIMEOUT=30  # seconds
EMAIL_TIMEOUT=10   # seconds
STRIPE_TIMEOUT=15  # seconds

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================
# Webhook endpoints for external services
WEBHOOK_BASE_URL=https://api.ofm.com/webhooks

# Webhook authentication tokens
STRIPE_WEBHOOK_TOKEN=your_stripe_webhook_verification_token
ONLYFANS_WEBHOOK_TOKEN=your_onlyfans_webhook_token

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================
# Database backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM (cron format)
BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=System temporarily unavailable for maintenance