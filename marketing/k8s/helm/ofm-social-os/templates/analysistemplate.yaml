{{- if .Values.canary.enabled }}
# Success Rate Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-success-rate
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: success-rate
      interval: {{ .Values.canary.analysis.interval }}
      successCondition: result[0] >= 0.95
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(publish_requests_total{status!~"5..",service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(publish_requests_total{service="{{`{{args.service-name}}`}}"}[5m]))

---
# Latency P95 Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-latency-p95
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: latency-p95
      interval: {{ .Values.canary.analysis.interval }}
      successCondition: result[0] < 10000
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            histogram_quantile(0.95, sum by(le)(rate(publish_latency_ms_bucket{service="{{`{{args.service-name}}`}}"}[5m])))

---
# Webhook Signature Verification Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-webhook-signature
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: webhook-signature-rate
      interval: {{ .Values.canary.analysis.interval }}
      successCondition: result[0] == 1.0
      failureLimit: 1 # Zero tolerance for signature failures
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(webhook_signature_verified_total{service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(webhook_signature_total{service="{{`{{args.service-name}}`}}"}[5m]))

---
# Combined SLO Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-slo-combined
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    {{- range .Values.canary.analysis.metrics }}
    - name: {{ .name }}
      interval: {{ $.Values.canary.analysis.interval }}
      successCondition: {{ .successCondition | default "result[0] >= 0.95" }}
      failureLimit: {{ .failureLimit | default 3 }}
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: {{ .query | nindent 12 }}
    {{- end }}

---
# Error Rate Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-error-rate
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: error-rate
      interval: 1m
      successCondition: result[0] <= 0.01 # Max 1% error rate
      failureLimit: 5
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(http_requests_total{status=~"5..",service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(http_requests_total{service="{{`{{args.service-name}}`}}"}[5m]))

---
# CPU Usage Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-cpu-usage
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: cpu-usage
      interval: 2m
      successCondition: result[0] <= 0.8 # Max 80% CPU usage
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            avg(rate(container_cpu_usage_seconds_total{pod=~"{{`{{args.service-name}}`}}-.*"}[5m])) by (pod)

---
# Memory Usage Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-memory-usage
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    - name: memory-usage
      interval: 2m
      successCondition: result[0] <= 0.85 # Max 85% memory usage
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            avg(container_memory_usage_bytes{pod=~"{{`{{args.service-name}}`}}-.*"} / 
                container_spec_memory_limit_bytes{pod=~"{{`{{args.service-name}}`}}-.*"}) by (pod)

---
# Comprehensive Analysis Template
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ include "ofm-social-os.fullname" . }}-comprehensive
  labels:
    {{- include "ofm-social-os.labels" . | nindent 4 }}
spec:
  args:
    - name: service-name
  metrics:
    # Success rate (primary SLO)
    - name: success-rate
      interval: 5m
      successCondition: result[0] >= 0.95
      failureLimit: 3
      weight: 3 # Higher weight for critical metric
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(publish_requests_total{status!~"5..",service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(publish_requests_total{service="{{`{{args.service-name}}`}}"}[5m]))
    
    # Latency P95
    - name: latency-p95
      interval: 5m
      successCondition: result[0] < 10000
      failureLimit: 3
      weight: 2
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            histogram_quantile(0.95, sum by(le)(rate(publish_latency_ms_bucket{service="{{`{{args.service-name}}`}}"}[5m])))
    
    # Error rate
    - name: error-rate
      interval: 2m
      successCondition: result[0] <= 0.01
      failureLimit: 5
      weight: 3
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(http_requests_total{status=~"5..",service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(http_requests_total{service="{{`{{args.service-name}}`}}"}[5m]))
    
    # Webhook signature verification
    - name: webhook-signature
      interval: 5m
      successCondition: result[0] == 1.0
      failureLimit: 1
      weight: 3 # Critical for security
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            sum(rate(webhook_signature_verified_total{service="{{`{{args.service-name}}`}}"}[5m])) / 
            sum(rate(webhook_signature_total{service="{{`{{args.service-name}}`}}"}[5m]))
    
    # Resource usage
    - name: cpu-usage
      interval: 2m
      successCondition: result[0] <= 0.8
      failureLimit: 3
      weight: 1
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            avg(rate(container_cpu_usage_seconds_total{pod=~"{{`{{args.service-name}}`}}-.*"}[5m]))
    
    - name: memory-usage
      interval: 2m
      successCondition: result[0] <= 0.85
      failureLimit: 3
      weight: 1
      provider:
        prometheus:
          address: http://prometheus-server:80
          query: |
            avg(container_memory_usage_bytes{pod=~"{{`{{args.service-name}}`}}-.*"} / 
                container_spec_memory_limit_bytes{pod=~"{{`{{args.service-name}}`}}-.*"})
{{- end }}